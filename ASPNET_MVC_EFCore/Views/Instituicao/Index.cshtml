@model IEnumerable<ASPNET_MVC_EFCore.Models.Instituicao> // Define o que a view recebe e será definada como modelo

@{
    //Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
<p>
    <a asp-action="Create">Criar nova instituição</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.InstituicaoId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.InstituicaoId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco)
            </td>
            <td> <!-- Tag Helpers -->
               <a asp-action="Edit" asp-route-id="@item.InstituicaoId"> Editar </a> |
               <a asp-action="Details" asp-route-id="@item.InstituicaoId" > Detalhes </a> |
               <a asp-action="Delete" asp-route-id="@item.InstituicaoId" > Excluir </a>
            </td>
        </tr>
}
    </tbody>
</table>
</body>
</html>

<!-- HTML HELPERS

    <td>
    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
    </td>

-->
